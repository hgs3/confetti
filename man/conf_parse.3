.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\" --------------------------------------------------------------------------
.TH "CONFETTI" "3" "April 2nd 2025" "Confetti 0.2.1"
.SH NAME
conf_parse, conf_free \- parse confetti
.\" --------------------------------------------------------------------------
.SH LIBRARY
Configuration parser (libconfetti, -lconfetti)
.\" --------------------------------------------------------------------------
.SH SYNOPSIS
.nf
.B #include <confetti.h>
.PP
.BI "conf_document *conf_parse(const char *" str ", const conf_options *" opts ", conf_error *" err ");"
.BI "void conf_free(conf_document *" doc ");"
.fi
.\" --------------------------------------------------------------------------
.SH DESCRIPTION
The \fBconf_parse\fR function parses \fIstr\fR as Confetti source text and returns a pointer to the Confetti document.
The resulting document must be freed with \fBconf_free\fR(3).
If an error occurs during parsing, then \fCNULL\fR is returned and \fIerr\fR, if specified, is populated with error details.
.PP
.\" --------------------------------------------------------------------------
.SS Error structure
If \fBconf_parse\fR fails, it returns an error code which is one of \fBconf_errno\fR values.
The conditions under which these constants are returned is documented in RETURN VALUE.
.PP
If \fIerr\fR is not \fCNULL\fR, then it will be populated with details about the error.
The \fBconf_error\fR structure includes the following f ields:
.PP
.in +4n
.EX
long where;
conf_errno code;
char description[48];
.EE
.in
.PP
The \fIcode\fR field will be populated with the same error code returned by the function.
The \fIwhere\fR field will be populated with the UTF-8 code unit index of the location where the error occured in \fIstr\fR.
The \fIdescription\fR field will describe the error localized in US English.
.\" --------------------------------------------------------------------------
.SS Options structure
The behavior of the Confetti parser can be controlled with the optional \fIopts\fR argument.
The \fBconf_options\fR structure includes the following fields:
.PP
.in +4n
.EX
conf_ext extensions;
int max_depth;
conf_allocfn allocator;
void *user_data;
.EE
.in
.PP
The \fImax_depth\fR field, if non-zero, specifies the maximum nesting depth of a Confetti subdirectives.
The \fIallocator\fR field, if non-NULL, must point to a user implemented custom memory allocator, the behavior of which is described in the following subsection.
The \fIuser_data\fR field is a user pointer passed to the \fIallocator\fR function as-is.
.\" --------------------------------------------------------------------------
.SS Allocator function
The \fBconf_allocfn\fR function accepts three arguments:
.PP
.in +4n
.EX
void *ud;
void *ptr;
size_t size;
.EE
.in
.PP
If the \fIptr\fR argument is \fCNULL\fR, then the implementation must behave like \fBmalloc\fR(3) and return a valid pointer for use by the \fBconf_parse\fR function, otherwise, it must behave like \fBfree\fR(3) and free \fIptr\fR and return \fCNULL\fR.
The \fIsize\fR argument is either the size of the memory being allocated or the size of the memory being freed depending on if the implementation is behaving like \fBmalloc\fR(3) or \fBfree\fR(3).
.\" --------------------------------------------------------------------------
.SH RETURN VALUE
The \fBconf_parse\fR function will return one of the following \fBconf_errno\fR constants.
If given, the \fIerr\fR structure will be populated with details about the error.
.TP
.BR CONF_NO_ERROR
When \fIstr\fR is parsed without errors.
.TP
.BR CONF_OUT_OF_MEMORY
If dynamic memory allocation fails.
The implementation garuntees all intermediate allocations will be freed to avoid resource leakage.
.TP
.BR CONF_BAD_SYNTAX,
If a Confetti syntax error is discovered.
.TP
.BR CONF_ILLEGAL_BYTE_SEQUENCE,
If a malformed UTF-8 sequence is found.
.TP
.BR CONF_INVALID_OPERATION
If \fIstr\fR or \fImemfn\fR are NULL.
.TP
.BR CONF_MAX_DEPTH_EXCEEDED
If the maximum subdirective nesting depth is exceeded.
.\" --------------------------------------------------------------------------
.SH LICENSING
Confetti is Free Software distributed under the MIT License.
Please see the LICENSE file included with the Confetti distribution for details.
