.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\" --------------------------------------------------------------------------
.TH "CONFETTI" "3" "April 27th 2025" "Confetti 1.0.0-beta.4"
.SH NAME
confetti \- configuration language and parser library
.\" --------------------------------------------------------------------------
.SH LIBRARY
Configuration parser (libconfetti, -lconfetti)
.\" --------------------------------------------------------------------------
.SH SYNOPSIS
.nf
.B #include <confetti.h>
.fi
.\" --------------------------------------------------------------------------
.SH DESCRIPTION
Confetti is a configuration language that combines the readability of Unix configuration files with the flexibility of S-expressions.
It is minimalistic, untyped, and unopinionated.
Schema conformance is validated by the user application.
.\" -------------------------------------
.SS Parsing
Confetti-conformant source text is formally known as a configuration unit.
A configuration unit might correspond with a file in a file system, but that correspondence is not required.
.PP
The Confetti library is implemented in C11 and provides two public interfaces for processing configuration units:
.PP
.IP \[bu]
The first interface visits configuration elements in a configuration unit without building an in-memory representation of the unit.
This is achieved by invoking a user-provided callback function as the parser discovers configuration elements.
See \fBconf_walk\fR(3) for details.
.PP
.IP \[bu]
The second interface builds an in-memory representation of the configuration unit which can be inspected in a freeform way.
This approach will be familiar as most parsers build an in-memory representation for freeform traversal.
See \fBconf_parse\fR(3) for details.
.\" -------------------------------------
.SS Functions
The Confetti C API consists of fewer than a dozen functions:
.TP
.BR conf_walk (3)
Parse a configuration unit and incrementally invoke a function callback as the parser discovers configuration elements.
.TP
.BR conf_parse (3)
Parse a configuration unit into an in-memory representation for freeform traversal.
.TP
.BR conf_free (3)
Free a configuration unit returned from \fBconf_parse\fR(3).
.TP
.BR conf_get_root (3)
Returns a pseudo directive representing the top-level of the configuration unit.
.TP
.BR conf_get_comment (3)
Get a comment from the configuration unit.
.TP
.BR conf_get_comment_count (3)
Number of comments in the configuration unit.
.TP
.BR conf_get_directive (3)
Get a subdirective from a directive.
.TP
.BR conf_get_directive_count (3)
Number of subdirectives belonging to a directive.
.TP
.BR conf_get_argument (3)
Get an argument belonging to a directive.
.TP
.BR conf_get_argument_count (3)
Number of arguments belonging to a directive.
.\" --------------------------------------------------------------------------
.SH EXAMPLE
The following is an example of a Confetti-conformant configuration unit:
.PP
.in +4n
.EX
# This is a comment.

probe-device eth0 eth1

user * {
    login anonymous
    password "${ENV:ANONPASS}"
    machine 167.89.14.1
    proxy {
        try-ports 582 583 584
    }
}

user "Joe Williams" {
    login joe
    machine 167.89.14.1
}
.EE
.in
.PP
Complete code examples demonstrating how to parse Confetti source text with the C API are included with the source distribution.
.\" --------------------------------------------------------------------------
.SH SEE ALSO
.BR conf_walk (3),
.BR conf_parse (3),
.BR conf_free (3),
.BR conf_get_root (3),
.BR conf_get_comment (3),
.BR conf_get_comment_count (3),
.BR conf_get_directive (3),
.BR conf_get_directive_count (3),
.BR conf_get_argument (3),
.BR conf_get_argument_count (3)
.\" --------------------------------------------------------------------------
.SH INTERNET RESOURCES
The website for Confetti, which hosts learning materials, examples, and the specification, is published at
.UR https://confetti.hgs3.me
https://confetti.hgs3.me
.UE .
.PP
The source code for the Confetti C library is published at
.UR https://github.com/hgs3/confetti
https://github.com/hgs3/confetti
.UE .
If you need support or encounter a bug, then please report it on the issue tracker.
.\" --------------------------------------------------------------------------
.SH LICENSING
Confetti is Open Source software distributed under the MIT License.
Please see the LICENSE file included with the Confetti distribution for details.